<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lqx.mapper.NotifyMapper">
  <resultMap id="BaseResultMap" type="com.lqx.pojo.Notify">
    <id column="_id" jdbcType="INTEGER" property="id" />
    <result column="_title" jdbcType="VARCHAR" property="title" />
    <result column="_uploader" jdbcType="VARCHAR" property="uploader" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="_description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    _id, _title, _uploader, file_name, _description, create_time
  </sql>
  <select id="selectByExample" parameterType="com.lqx.pojo.NotifyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notify
    where _id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notify
    where _id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lqx.pojo.NotifyExample">
    delete from notify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lqx.pojo.Notify">
    insert into notify (_id, _title, _uploader, 
      file_name, _description, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{uploader,jdbcType=VARCHAR}, 
      #{fileName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, curTime()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lqx.pojo.Notify">
    insert into notify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        _id,
      </if>
      <if test="title != null">
        _title,
      </if>
      <if test="uploader != null">
        _uploader,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="description != null">
        _description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="uploader != null">
        #{uploader,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lqx.pojo.NotifyExample" resultType="java.lang.Long">
    select count(*) from notify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notify
    <set>
      <if test="record.id != null">
        _id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        _title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.uploader != null">
        _uploader = #{record.uploader,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        _description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notify
    set _id = #{record.id,jdbcType=INTEGER},
      _title = #{record.title,jdbcType=VARCHAR},
      _uploader = #{record.uploader,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      _description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lqx.pojo.Notify">
    update notify
    <set>
      <if test="title != null">
        _title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="uploader != null">
        _uploader = #{uploader,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        _description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where _id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lqx.pojo.Notify">
    update notify
    set _title = #{title,jdbcType=VARCHAR},
      _uploader = #{uploader,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      _description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where _id = #{id,jdbcType=INTEGER}
  </update>
</mapper>